@layout('layouts.master')

@section('content')
<div class="container">
  <div class="table-wrapper">
      <div class="table-title">
          <div class="row">
              <div class="col-md-6">
                <div class="mb-2">Welcome, {{ name }}</div>
                <h2><b>Articles</b></h2>
                @if(flashMessage('successMessage'))
                  <div class="alert alert-success mb-4">{{ flashMessage('successMessage') }}</div>
                @endif
        
                @if(flashMessage('errorMessage'))
                  <div class="alert alert-danger mb-4">{{ flashMessage('errorMessage') }}</div>
                @endif
    </div>
    <div class="col-md-6">
      <form action="{{ route('logout') }}" method="POST">
        {{ csrfField() }}
        <button class="btn btn-primary">Logout</button>
      </form>
      <a href="#addArticleModal" class="btn btn-success" data-toggle="modal"><i class="material-icons">&#xE147;</i> <span>Add New Employee</span></a>
    </div>
          </div>
      </div>
      <table class="table table-striped table-hover" id="articleTable">
          <thead>
              <tr>
      <th>No.</th>
      <th>Judul</th>
      <th>Tanggal</th>
      <th>Author</th>
      <th>Page View</th>
      <th>Status</th>
      <th>Action</th>
              </tr>
          </thead>
          <tbody>
            @each(article in loadArticles)
              <tr>
                  <td>{{ ($loop.index + 1) }}</td>
                  <td>
                    <a href="javascript:void(0);" class="edit" data-toggle="modal" 
                    data-atc_id="{{ article.id }}", 
                    data-title="{{ article.title }}", 
                    data-body="{{ article.body }}", 
                    data-date="{{ article.date }}", 
                    data-author="{{ article.author }}", 
                    data-author_id="{{ article.author_id }}", 
                    data-page_view="{{ article.page_view }}", 
                    data-status_id="{{ article.status_id }}", 
                    data-status="{{ article.status }}">{{ article.title }}</a>
                  </td>
                  <td>{{ article.date }}</td>
                  <td>{{ article.author }}</td>
                  <td>{{ article.page_view }}</td>
                  <td>{{ article.status }}</td>
                  <td>
                    <form action="{{ route('articles.delete', { id: article.id }) + '?_method=DELETE' }}" method="POST">
                      {{ csrfField() }}
                      <button class="btn btn-sm btn-danger"><i class="material-icons" data-toggle="tooltip" title="Delete">&#xE872;</i></button>
                    </form>
                  </td>
              </tr>
              @endeach
          </tbody>
      </table>
  </div>
</div>
<!-- Add Modal HTML -->
<div id="addArticleModal" class="modal fade">
  <div class="modal-dialog">
    <div class="modal-content">
      <form action="{{ route('articles.store') }}" method="POST">
        {{ csrfField() }}
        <div class="modal-header">						
          <h4 class="modal-title">Add Article</h4>
          <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
        </div>
        <div class="modal-body">
          <div class="form-group">
            <label>Judul</label>
            <input type="text" id="title" name="title" class="form-control" required>
          </div>
          <div class="form-group">
            <label>Konten</label>
            <textarea id="body" name="body" class="form-control" required></textarea>
          </div>
          <div class="form-group">
            <label>Tanggal</label>
             <input type="text" id="date" name="date" class="form-control" placeholder="MM/DD/YYYY" readonly required>
          </div>
          <div class="form-group">
            <label>Author</label>
            <select id="author" name="author" class="form-control form-select" aria-label="Default select example" required>
              <option selected>Pilih Author</option>
              @each(author in loadAuthor)
              <option value="{{ author.id }}">{{ author.name }}</option>
              @endeach
            </select>
          </div>
          <div class="form-group">
            <label>Page View</label>
            <input type="number" id="page_view" name="page_view" class="form-control" required>
          </div>
          <div class="form-group">
            <label>Status</label>
            <select id="status" name="status" class="form-control form-select" aria-label="Default select example" required>
              <option selected>Pilih Status</option>
              @each(status in loadStatus)
              <option value="{{ status.id }}">{{ status.status }}</option>
              @endeach
            </select>
          </div>
        </div>
        <div class="modal-footer">
          <input type="hidden" name="id" class="atc_id">
          <input type="button" class="btn btn-default" data-dismiss="modal" value="Cancel">
          <button type="submit" class="btn btn-success">Add Article</button>
        </div>
      </form>
    </div>
  </div>
</div>

<!-- Edit Modal HTML -->
<div id="editArticleModal" class="modal fade">
  <div class="modal-dialog">
    <div class="modal-content">
      <form action="{{ route('articles.update') + '?_method=PATCH' }}" method="POST">
        {{ csrfField() }}
        <div class="modal-header">						
          <h4 class="modal-title">Edit Article</h4>
          <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
        </div>
        <div class="modal-body">
          <div class="form-group">
            <label>Judul</label>
            <input type="text" id="editTitle" name="editTitle" class="form-control title" required>
          </div>
          <div class="form-group">
            <label>Konten</label>
            <textarea id="editBody" name="editBody" class="form-control body" required></textarea>
          </div>
          <div class="form-group">
            <label>Tanggal</label>
             <input type="text" id="date" name="date" class="form-control date" placeholder="MM/DD/YYYY" readonly required>
          </div>
          <div class="form-group">
            <label>Author</label>
            <select id="editAuthor" name="editAuthor" class="form-control author form-select" aria-label="Default select example" required>
              @each(author in loadAuthor)
              <option value="{{ author.id }}">{{ author.name }}</option>
              @endeach
            </select>
          </div>
          <div class="form-group">
            <label>Page View</label>
            <input type="number" id="editPageView" name="editPageView" class="form-control page_view" required>
          </div>
          <div class="form-group">
            <label>Status</label>
            <select id="editStatus" name="editStatus" class="form-control status form-select" aria-label="Default select example" required>
              @each(status in loadStatus)
              <option value="{{ status.id }}">{{ status.status }}</option>
              @endeach
            </select>
          </div>
        </div>
        <div class="modal-footer">
          <input type="hidden" name="atc_id" class="atc_id">
          <input type="button" class="btn btn-default" data-dismiss="modal" value="Cancel">
          <button type="submit" class="btn btn-primary">Save</button>
        </div>
      </form>
    </div>
  </div>
</div>

<!-- Page Content -->
<div class="container">

  <div class="row">

    <!-- Post Content Column -->
    <div class="col-lg-8">

      <!-- Title -->
      <h1 class="mt-4">Soal dan Jawaban</h1>
      
      <hr>

      <!-- Post Content -->
      <p>1. Buatlah satu applikasi web untuk membantu reporter dan editor menulis berita menggunakan Bahasa pemprograman sesuai keahlian mu. Hal-hal yang perlu di perhatikan:</p>
      <ul>
        <li>Applikasi web minimal memiliki halaman untuk login dan halaman untuk menulis berita.</li>
        <li>Silahkan gunakan docker-compose untuk menjalankan applikasi yang kalian telah buat berserta database</li>
        <li>Membuat database migration dan seeding di dalamnya</li>
        <li>Upload di public git repository. Sertakan url dari public git repository tersebut untuk menjawab soal ini</li>
      </ul>
      <p>Jawab: Sudah diimplementasikan pada aplikasi ini.</p>
      <p>2.	Hitung  jumlah huruf di dalam artikel ini https://klasika.kompas.id/baca/inspiraksi-kemilau-perayaan-hut-ke-50-kompas/, algoritma harus dapat menjawab jumlah huruf [ A - Z]:</p>
      <p>Jawab:</p>
      <p>
        <code>
          let content = "Perjalanan penuh kisah milik bangsa Indonesia dan dunia dalam kurun waktu setengah abad ini telah terabadikan. Pada 28 Juni 2015, usia 50 tahun dicapai oleh harian umum yang didirikan PK Ojong (1920â€“1980) dan Jakob Oetama ini. Usia emas menjadi pertanda harian ini mampu terus hadir menemani langkah-langkah Indonesia untuk terus menginspirasi dan menjadi Amanat Hati Nurani Rakyat.Dalam rangka merayakan usia 50 tahun ini, Kompas mengadakan acara Inspira(k)si. Acara ini mencakup berbagai macam program, yaitu Inspi Baca, Inspi Kendara, Inspi Sinema, Inspi Rasa, Inspi Rehat, dan Inspi Vision. Untuk dapat turut serta dalam program-program tersebut, pembaca Kompas bisa memanfaatkan kupon-kupon yang ada di koran ini pada edisi 28 Juni.Berbagai promosi menarik di tiap Inspi dapat dinikmati dengan menyertakan koran Kompas dan memiliki kartu Flazz BCA atau Mandiri e-money. Inspi Baca mempersembahkan potongan harga senilai Rp 50.000. Inspi Rasa, Inspi Rehat, dan Inspi Vision menghadirkan diskon 50 persen. Sementara itu, pembaca Kompas juga dapat menikmati Inspi Kendara naik Transjakarta serta Inspi Cinema dengan menonton film Terminator dan Minions di beberapa studio Bioskop XXI hanya dengan Rp 50.Puncak acara Inspira(k)si digelar di Plaza Selatan, Gelora Bung Karno, Jakarta, melalui Inspi Rasa. Mulai Pasar Subuh yang berlangsung pukul 05.00-10.00, dilanjutkan pada pukul 10.00â€“22.00 dengan bazar kuliner untuk berbuka puasa dan produk-produk industri kreatif. Acara makin meriah dengan gelaran Ramadhan Jazz yang menghadirkan musisi Jazz Tanah Air, yaitu Tompi, MawarDirie (Iga Mawarni, Dian HP, Rieka Roslan, dan Troubadours Band), Endah n Resha, Iwan Abdhi, The Groove, dan Kunto Aji.Rieka menyampaikan harapannya untuk Kompas, â€œSemoga Kompas dapat terus menjadi surat kabar yang memberikan inspirasi. Karena dari aku kecil, ayahku sering menyuruh aku untuk baca Kompas. Hingga akhirnya menjadi terbiasa sampai aku dewasa. Kata bapakku, baca Kompas agar kamu bisa menjadi musisi yang tidak sekadar bisa menyanyi. Aku merasakan manfaatnya, misalnya saja ketika berada di panggung pun aku jadi punya bahan untuk di-obrolin karena aku mengikuti perkembangan dunia ekonomi, politik, dan sosial yang terjadi. Di mana hal ini penting.â€Ia menambahkan, Kompas menjadi media yang konsisten dan memberikan lahan yang cukup besar untuk menginformasikan budaya Indonesia. â€œIni bagus karena dapat memberikan inspirasi bagi masyarakat Indonesia, khususnya generasi muda untuk makin mencintai Indonesia. Tanpa budaya, saya kira kita bukan apa-apa.â€Lintas generasiSebagai harian umum yang telah berusia 50 tahun, Kompas tetap berupaya agar generasi muda juga dapat terus mengenal dan membaca Kompas. Penyanyi Kunto Aji mengapresiasi acara yang dihelat Kompas ini.â€Ini merupakan acara yang bagus dan menarik sekali. Saya mengucapkan selamat ulang tahun, Kompas. Semoga dengan usia 50, Kompas semakin emas di industri media. Terus menjadi media yang obyektif, netral, jadi acuan bagi para pembaca, dan tepercaya,â€ ujar Kunto yang terkenal dengan lagu â€œTerlalu Lama Sendiriâ€.Para pengunjung Inspi Rasa, contohnya Ana (60) dari Rawamangun, mengatakan, dirinya memang sudah merencanakan jauh-jauh hari untuk ikut serta memeriahkan ulang tahun Kompas. â€œSaya datang ke area Inspi Rasa bersama keluarga. Dapat informasi tentang acara ini dari iklan di Kompas. Setelah pulang dari beribadah pukul 10, langsung meluncur ke sini. Saya sudah lama berlangganan koran ini. Kompas memberikan informasi berita yang berkualitas dan dapat menjadi referensi yang bagus.â€Selain Ana, kemeriahan ulang tahun Kompas juga dirasakan oleh Kartika (21) dan Tari (20), warga Kebon Jeruk, Jakarta. Menurut mereka, perayaan pesta emas Kompas terasa sangat menyenangkan.Di Inspi Rasa, mereka sangat menantikan penampilan Endah n Resha dan Kunto Aji. Mereka berharap agar Kompas dapat terus hadir menemani Indonesia dan memberikan inspirasi bagi generasi muda untuk berprestasi."<br><br>
          function countAlphabet(content) {<br>
          &nbsp;&nbsp;&nbsp;content = (content.replace(/[^a-z]/gi, '')).toUpperCase()<br>
          &nbsp;&nbsp;&nbsp;let object = {}<br>
          &nbsp;&nbsp;&nbsp;let chararcter, count;<br>
          
          &nbsp;&nbsp;&nbsp;for (let index = 0; index < content.length; index++) {<br>
          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;chararcter = content.charAt(index)<br>
          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count = object[chararcter]<br>
          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;object[chararcter] = count ? count + 1 : 1<br>
          &nbsp;&nbsp;&nbsp;}<br>
          &nbsp;&nbsp;&nbsp;<br>
          
          &nbsp;&nbsp;&nbsp;const alphabetCounted = {}<br>
          &nbsp;&nbsp;&nbsp;for (chararcter in object) {<br>
          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alphabetCounted[chararcter] = object[chararcter]<br>
          &nbsp;&nbsp;&nbsp;}<br>
          &nbsp;&nbsp;&nbsp;<br>
          
          &nbsp;&nbsp;&nbsp;const ordered = Object.keys(alphabetCounted).sort().reduce(<br>
          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(obj, key) => { <br>
          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;obj[key] = alphabetCounted[key]; <br>
          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return obj;<br>
          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, <br>
          
          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{}<br>
          &nbsp;&nbsp;&nbsp;);<br>
          &nbsp;&nbsp;&nbsp;return ordered<br>
          }<br>
          const result = countAlphabet(content)<br>
          console.log(result)<br>
        </code>
      </p>
      <ul>
        @each((value, key) in alphabets)
          <li class=" d-flex justify-content-between align-items-center">
            {{ key }} : {{ value }}
          </li>
        @endeach
      </ul>
      <p>3.	Jawab pertanyaan berikut dengan menggunakan query Mysql/Sql server/PosgreSql:</p>
      <ul>
        <li>1. Buat query untuk menghitung banyak artikel yang ditulis oleh reporter 1</li>
        <li>2. Buat query untuk menghitung jumlah kata di dalam body pada tabel artikel</li>
        <li>3. Buat query untuk menentukan siapa reporter yang paling banyak menulis berita</li>
        <li>4. Buat query untuk menentukan sponsor dan sumber artikel dengan id 1 </li>
        <li>5. Buat query untuk mengurutkan artikel yang ada berdasarkan tangal terbit</li>
        <li>6. Buat query untuk menentukan jumlah artikel yang terpublish</li>
        <li>7. Buat query untuk menampilkan nama author, judul berita, tanggal terbit dan photographer dari berita (bila photographer tidak ditemukan diberikan tanda –  didalam baris tersebut)</li>
        <li>8. Buat query untuk menampilkan sponsor, judul berita, sumber, tanggal terbit dengan format ISO 8601  (bila sponsor tidak ditemukan diberikan tanda –  didalam baris  di kolom tersebut)</li>
        <li>9. Berapa rata-rata pageview artikel yang diterbitkan pada bulan januari 2020 </li>
      </ul>
      <p>Jawab:</p>
      <ul>
        <li>
          <p>3.1 Jumlah article report 1</p>
          <p>
            <code>
              SELECT count(atc.id) number_article
              FROM kompas.articles atc 
              inner join kompas.authors atr on atc.author_id = atr.id 
              where atr.name = 'reporter 1';
            </code>
          </p>
        </li>
        <li>
          <p>3.2 Jumlah kata pada kolom body di table article</p>
          <p>
            <code>
              SELECT length(body) number_body, (LENGTH(body) - LENGTH(REPLACE(body, ' ', '')) + 1) number_char_body FROM kompas.articles;
            </code>
          </p>
        </li>
        <li>
          <p>3.3 Reporter yang paling banyak menulis berita</p>
          <p>
            <code>
              select atr.name reporter, count(atc.id) number_article
              FROM kompas.articles atc 
              inner join kompas.authors atr on atc.author_id = atr.id 
              group by reporter order by number_article desc limit 1;
            </code>
          </p>
        </li>
        <li>
          <p>3.4 Sponsor dan sumber artikel dengan id 1</p>
          <p>
            <code>
              select m_atc.meta_key, m_atc.meta_value 
              from kompas.articles atc 
              inner join kompas.meta_articles m_atc on atc.id = m_atc.post_id
              where atc.id = 1;
            </code>
          </p>
        </li>
        <li>
          <p>3.5 Mengurutkan artikel yang ada berdasarkan tangal terbit</p>
          <p>
            <code>
              select * from kompas.articles order by date_published asc;
            </code>
          </p>
        </li>
        <li>
          <p>3.6 Menentukan jumlah artikel yang terpublish</p>
          <p>
            <code>
              select count(atc.id) number_published from kompas.articles atc
              inner join kompas.statuses sts on atc.status = sts.id
              where sts.status = 'publish';
            </code>
          </p>
        </li>
        <li>
          <p>3.7 Menampilkan nama author, judul berita, tanggal terbit dan photographer dari berita (bila photographer tidak ditemukan diberikan tanda –  didalam baris tersebut)</p>
          <p>
            <code>
              select atr.name author, atc.title berita, DATE_FORMAT(atc.date_published,"%d-%m-%Y %T") tgl_terbit, IFNULL(m_atc.meta_value,'-') photographer
              from kompas.articles atc
              left join kompas.authors atr on atc.author_id = atr.id
              left join kompas.meta_articles m_atc on atc.id = m_atc.post_id and m_atc.meta_key = 'photographer'
              order by tgl_terbit desc; 
            </code>
          </p>
        </li>
        <li>
          <p>3.8 Menampilkan sponsor, judul berita, sumber, tanggal terbit dengan format ISO 8601  (bila sponsor tidak ditemukan diberikan tanda –  didalam baris  di kolom tersebut)</p>
          <p>
            <code>
              select 
              IFNULL(m_atc.meta_value,'-') sponsor, 
              atc.title berita,
              (select meta_value from kompas.meta_articles where post_id = atc.id and meta_key = 'sumber') sumber, 
              DATE_FORMAT(atc.date_published,"%Y-%m-%dT%TZ") tgl_terbit
              from kompas.articles atc
              left join kompas.authors atr on atc.author_id = atr.id
              left join kompas.meta_articles m_atc on atc.id = m_atc.post_id and m_atc.meta_key = 'sponsor'
              order by tgl_terbit desc; 
            </code>
          </p>
        </li>
        <li>
          <p>3.9 Rata-rata pageview artikel yang diterbitkan pada bulan januari 2020 </p>
          <p>
            <code>
              select ROUND(AVG(page_view)) avarage_view from kompas.articles where status = 1 and DATE_FORMAT(date_published, "%Y-%m") = '2020-01';
            </code>
          </p>
        </li>
      </ul>
      <p>4. Terdapat sebuah array yang berisi bilangan 1,2,3,4,5,1,4,6,8,10, Buatlah Algoritma/Pseudocode untuk menentukan:</p>
      <ul>
        <li>1. Jumlah (Sum) angka di dalam array </li>
        <li>2. Berapa Jumlah angka berulang di dalam array tersebut</li>
        <li>3. Hapus angka berulang di array tersebut sehingga menghasilkan 1,2,3,4,5,6,8,10</li>
        <li>4. Berapa jumlah bilangan genap di dalam array tersebut</li>
        <li>5. Berapa jumlah bilangan fibonaci di dalam array tersebut</li>
        <li>6. Jumlah angka berulang di array tersebut</li>
        <li>7. Urutkan angka di dalam array tersebut dari yang terbesar ke yang terkecil</li>
      </ul>
      <p>Jawab:</p>
      <ul>
        <li>
          <p>4.1 Jumlah (Sum) angka di dalam array</p>
          <p>
            <code>
              const content = [1,2,3,4,5,1,4,6,8,10]<br>
              const result = content.reduce((a, b) => a + b, 0)<br>
              console.log(result)<br>
            </code>
          </p>
        </li>
        <li>
          <p>4.2 Jumlah angka berulang di dalam array</p>
          <p>
            <code>
              const content = [1,2,3,4,5,1,4,6,8,10]<br>
              const object = {};<br>
              const result = []<br>
              let countDuplicate = 0<br>
              content.forEach(function(x){ <br>
              &nbsp;&nbsp;&nbsp;object[x] = (object[x] || 0) + 1 <br>
              &nbsp;&nbsp;&nbsp;if(object[x] > 1) {<br>
              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result.push({['angka ' + x + ' berulang'] : object[x]})<br>
              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;countDuplicate++<br>
              &nbsp;&nbsp;&nbsp;}<br>
              })<br>
              result.push({totalDuplicate : countDuplicate})<br>
              console.log(result)<br>
            </code>
          </p>
        </li>
        <li>
          <p>4.3 Hapus angka berulang di array tersebut sehingga menghasilkan 1,2,3,4,5,6,8,10</p>
          <p>
            <code>
              const content = [1,2,3,4,5,1,4,6,8,10]<br>
              const result = [...new Set(content)]<br>
              console.log(result)<br>
            </code>
          </p>
        </li>
        <li>
          <p>4.4 Jumlah bilangan genap di dalam array</p>
          <p>
            <code>
              const content = [1,2,3,4,5,1,4,6,8,10]<br>
              const filterEvenNumber = content.filter(number => number % 2 == 0)<br>
              const result = filterEvenNumber.length<br>
              console.log(result)<br>
            </code>
          </p>
        </li>
        <li>
          <p>4.5 Jumlah bilangan fibonaci di dalam array</p>
          <p>
            <code>
              const fibonacci = (start) => {<br>
              &nbsp;&nbsp;&nbsp;const fib = []<br>
              &nbsp;&nbsp;&nbsp;const result = []<br>
              &nbsp;&nbsp;&nbsp;fib[0] = 0<br>
              &nbsp;&nbsp;&nbsp;fib[1] = 1<br>
              &nbsp;&nbsp;&nbsp;for (let i = 2; i <= start; i++) {<br>
              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fib[i] = fib[i - 2] + fib[i - 1]<br>
              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result.push(fib[i])<br>
              &nbsp;&nbsp;&nbsp;}<br>
              &nbsp;&nbsp;&nbsp;return result<br>
              }<br>
              const content = [1,2,3,4,5,1,4,6,8,10]<br>
              const getMaxNumber = Math.max(...content)<br>
              const generateFibonacci = fibonacci(getMaxNumber)<br>
              const getFibonacciNumber = content.filter(number => generateFibonacci.includes(number))<br>
              const sortArray = getFibonacciNumber.sort()<br>
              const result = sortArray.length<br>
              console.log('Fibonacci Number is:', generateFibonacci)<br>
              console.log('array list:', content)<br>
              console.log('Number of fibonacci on array is:', result)<br>
            </code>
          </p>
        </li>
        <li>
          <p>4.6 Jumlah angka berulang di array</p>
          <p>
            <code>
              const content = [1,2,3,4,5,1,4,6,8,10]<br>
              const object = {};<br>
              let result = 0<br>
              content.forEach(function(x){ <br>
              &nbsp;&nbsp;&nbsp;object[x] = (object[x] || 0) + 1 <br>
              &nbsp;&nbsp;&nbsp;if(object[x] > 1) result = result + x <br>
              })<br>
              console.log(result)<br>
            </code>
          </p>
        </li>
        <li>
          <p>4.7 Urutkan angka di dalam array tersebut dari yang terbesar ke yang terkecil</p>
          <p>
            <code>
              const content = [1,2,3,4,5,1,4,6,8,10]<br>
              const result = content.sort(function(a, b){return b-a})<br>
              console.log(result)<br>
            </code>
          </p>
        </li>
      </ul>
      <p>5. Buatlah 1 fungsi untuk memastikan bahwa password yang diinput user merupakan password yang kuat ( fungsi dibuat dengan Bahasa pemprograman apapun yang kalian sukai) Kriteria Password kuat:</p>
      <ul>
        <li>1. Memiliki minimal 2 huruf besar </li>
        <li>2. Memiliki minimal 5 huruf kecil </li>
        <li>3. Memiliki minimal special character (@#$%^&*()-+)</li>
        <li>4. Memiliki minimal 2 angka </li>
        <li>5. Berjumlah lebih dari 10 karakter tetapi tidak lebih dari 20 karakter </li>
        <li>6. Tidak boleh memiliki karakter berulang lebih dari 2x di dalam 1 password</li>
      </ul>
      <p>Jawab:</p>
      <p>Catatan: Fungsi ini diimplementasikan pada halaman registrasi, silahkan akses halaman login dengan menekan tombol logout pada halaman ini.</p>
      <ul>
        <li>
          <p>5.1 Memiliki minimal 2 huruf besar</p>
          <p>
            <code>
              const regex2Capital = new RegExp("^(?=(.*[A-Z]){2,})")<br>
              const password = "Kompas1702!"<br>
              const result = regex2Capital.test(password)<br>
              let message = null<br>
              if(result){ message = "Password Valid" } else message = "The Password must contain at least 2 uppercase alphabetical character"<br>
              console.log(message)
            </code>
          </p>
        </li>
        <li>
          <p>5.2 Memiliki minimal 5 huruf kecil</p>
          <p>
            <code>
              const regex5NonCapital = new RegExp("^(?=(.*[a-z]){5,})")<br>
              const password = "Kompas1702!"<br>
              const result = regex5NonCapital.test(password)<br>
              let message = null<br>
              if(result){ message = "Password Valid" } else message = "The Password must contain at least 5 lowercase alphabetical character"<br>
              console.log(message)
            </code>
          </p>
        </li>
        <li>
          <p>5.3 Memiliki minimal special character (@#$%^&*()-+)</p>
          <p>
            <code>
              const regexSpecialChar = new RegExp("^(?=.*[!@#$%^&*()+\-])")<br>
              const password = "Kompas1702!"<br>
              const result = regexSpecialChar.test(password)<br>
              let message = null<br>
              if(result){ message = "Password Valid" } else message = "The Password must contain at least one special character"<br>
              console.log(message)
            </code>
          </p>
        </li>
        <li>
          <p>5.4 Memiliki minimal 2 angka</p>
          <p>
            <code>
              const regex2Number = new RegExp("^(?=(.*[0-9]){2,})")<br>
              const password = "Kompas1702!"<br>
              const result = regex2Number.test(password)<br>
              let message = null<br>
              if(result){ message = "Password Valid" } else message = "The Password must contain at least 2 numberic character"<br>
              console.log(message)
            </code>
          </p>
        </li>
        <li>
          <p>5.5 Berjumlah lebih dari 10 karakter tetapi tidak lebih dari 20 karakter</p>
          <p>
            <code>
              const regex10to20 = new RegExp("^(?=.{10,20}$)")<br>
              const password = "Kompas1702!"<br>
              const result = regex10to20.test(password)<br>
              let message = null<br>
              if(result){ message = "Password Valid" } else message = "The Password must be mininum 10 characters and maximum 20 characters"<br>
              console.log(message)
            </code>
          </p>
        </li>
        <li>
          <p>5.6 Tidak boleh memiliki karakter berulang lebih dari 2x di dalam 1 password</p>
          <p>
            <code>
              const regexDuplicate = (/([a-zA-Z0-9!@#$%^&*()+\-]).*?&#92;1/)<br>
              const password = "Kompas1702!"<br>
              const result = regexDuplicate.test(password)<br>
              let message = null<br>
              if(result){ message = "The Password Must not have more than 2x repetitive characters" } else message = "Password Valid"<br>
              console.log(message)
            </code>
          </p>
        </li>
      </ul>
    </div>
    <!-- / Post Content Column -->

  </div>
  <!-- /.row -->

</div>
<!-- /.container -->
@endsection
